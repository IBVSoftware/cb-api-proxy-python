# coding: utf-8

"""
    Collaboard Public Web API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ibvcl_service_meta_entities_requests_public_v20_invite_subscription_user_item import IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem

class TestIBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem(unittest.TestCase):
    """IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem:
        """Test IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem`
        """
        model = IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem()
        if include_optional:
            return IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem(
                username = '',
                first_name = '',
                last_name = '',
                company_name = '',
                phone_number = '',
                language = ''
            )
        else:
            return IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem(
        )
        """

    def testIBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem(self):
        """Test IBVCLServiceMetaEntitiesRequestsPublicV20InviteSubscriptionUserItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
